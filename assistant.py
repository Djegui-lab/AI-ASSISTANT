import json
import os
import re
import logging
import streamlit as st
import firebase_admin
from firebase_admin import credentials, auth
from googleapiclient.discovery import build
from google.oauth2 import service_account
from google.generativeai import GenerativeModel, configure
from google.api_core.exceptions import GoogleAPIError
import boto3  # Pour Amazon Textract
from concurrent.futures import ThreadPoolExecutor
from datetime import datetime  # Ajout pour la gestion des dates

# Configuration de la journalisation
logging.basicConfig(filename="app.log", level=logging.INFO, format="%(asctime)s - %(message)s")

# Initialisation de Firebase
def initialize_firebase():
    """Initialise Firebase avec les donn√©es de configuration."""
    firebase_json_content = os.environ.get("firebasejson")
    if not firebase_json_content:
        st.error("La variable d'environnement 'firebasejson' n'est pas d√©finie.")
        return False

    try:
        firebasejson = json.loads(firebase_json_content)
        if not firebase_admin._apps:
            cred = credentials.Certificate(firebasejson)
            firebase_admin.initialize_app(cred)
            logging.info("Firebase initialis√© avec succ√®s.")
        return True
    except json.JSONDecodeError:
        st.error("Le contenu de 'firebasejson' n'est pas un JSON valide.")
    except Exception as e:
        st.error(f"Erreur lors de l'initialisation de Firebase : {str(e)}")
    return False

# Charger la liste des e-mails autoris√©s
def load_authorized_emails():
    """Charge la liste des e-mails autoris√©s depuis les variables d'environnement."""
    authorized_emails = os.environ.get("AUTHORIZED_EMAILS", "").split(",")
    return [email.strip() for email in authorized_emails if email.strip()]

# Valider la complexit√© du mot de passe
def validate_password(password):
    """Valide la complexit√© du mot de passe."""
    errors = []
    if len(password) < 8:
        errors.append("Le mot de passe doit contenir au moins 8 caract√®res.")
    if not re.search(r"[A-Z]", password):
        errors.append("Le mot de passe doit contenir au moins une majuscule.")
    if not re.search(r"[a-z]", password):
        errors.append("Le mot de passe doit contenir au moins une minuscule.")
    if not re.search(r"[0-9]", password):
        errors.append("Le mot de passe doit contenir au moins un chiffre.")
    return errors

# Valider l'e-mail
def validate_email(email):
    """Valide l'e-mail."""
    pattern = r"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$"
    return re.match(pattern, email) is not None

# Inscription d'un nouvel utilisateur
def signup(name, email, password, confirm_password, authorized_emails):
    """G√®re l'inscription d'un nouvel utilisateur."""
    try:
        if email not in authorized_emails:
            st.error("Votre e-mail n'est pas autoris√© √† s'inscrire.")
            logging.warning(f"Tentative d'inscription non autoris√©e avec l'e-mail : {email}")
            return

        if not validate_email(email):
            st.error("L'e-mail n'est pas valide.")
            return

        if password != confirm_password:
            st.error("Les mots de passe ne correspondent pas.")
            return

        password_errors = validate_password(password)
        if password_errors:
            for error in password_errors:
                st.error(error)
            return

        user = auth.create_user(email=email, password=password, display_name=name)
        st.success(f"Utilisateur {user.email} cr√©√© avec succ√®s!")
        logging.info(f"Utilisateur inscrit avec succ√®s : {email}")
    except auth.EmailAlreadyExistsError:
        st.error("Cet e-mail est d√©j√† utilis√©.")
        logging.warning(f"Tentative d'inscription avec un e-mail d√©j√† utilis√© : {email}")
    except Exception as e:
        st.error(f"Erreur: {e}")
        logging.error(f"Erreur lors de l'inscription : {e}")

# Mettre √† jour le mot de passe
def update_password(email, new_password, confirm_new_password):
    """Met √† jour le mot de passe d'un utilisateur."""
    try:
        if new_password != confirm_new_password:
            st.error("Les nouveaux mots de passe ne correspondent pas.")
            return

        password_errors = validate_password(new_password)
        if password_errors:
            for error in password_errors:
                st.error(error)
            return

        user = auth.get_user_by_email(email)
        auth.update_user(user.uid, password=new_password)
        st.success(f"Mot de passe de l'utilisateur {email} mis √† jour avec succ√®s!")
        logging.info(f"Mot de passe mis √† jour pour l'utilisateur : {email}")
    except auth.UserNotFoundError:
        st.error("Aucun utilisateur trouv√© avec cet e-mail.")
        logging.warning(f"Tentative de mise √† jour du mot de passe pour un utilisateur inexistant : {email}")
    except Exception as e:
        st.error(f"Erreur: {e}")
        logging.error(f"Erreur lors de la mise √† jour du mot de passe : {e}")

# Initialiser l'√©tat de la session
def initialize_session_state():
    """Initialise l'√©tat de la session."""
    if "logged_in" not in st.session_state:
        st.session_state.logged_in = False
        st.session_state.user_email = None
    if "history" not in st.session_state:
        st.session_state.history = []  # Historique des interactions
    if "docs_text" not in st.session_state:
        st.session_state.docs_text = ""
    if "client_docs_text" not in st.session_state:
        st.session_state.client_docs_text = ""

# Connexion de l'utilisateur
def login(email, password):
    """G√®re la connexion de l'utilisateur."""
    try:
        user = auth.get_user_by_email(email)
        if user.email == email:  # Simulez une validation du mot de passe ici si n√©cessaire
            st.session_state.logged_in = True
            st.session_state.user_email = email
            st.success(f"Connect√© en tant que {email}")
            logging.info(f"Utilisateur connect√© : {email}")
        else:
            st.error("Connexion √©chou√©e, e-mail ou mot de passe incorrect.")
    except Exception as e:
        st.error(f"Erreur: {e}")
        logging.error(f"Erreur lors de la connexion : {e}")

# D√©connexion de l'utilisateur
def logout():
    """G√®re la d√©connexion de l'utilisateur."""
    st.session_state.logged_in = False
    st.session_state.user_email = None
    st.success("D√©connexion r√©ussie.")
    logging.info("Utilisateur d√©connect√©.")

# Calculer la mise √† jour du CRM
def calculate_crm_update(ri_date, crm_value):
    """Calcule si le CRM est √† jour en fonction de la date d'√©dition du RI et de la date d'aujourd'hui."""
    today = datetime.now()
    ri_date = datetime.strptime(ri_date, "%d/%m/%Y")
    delta = today - ri_date
    if delta.days > 90:  # 3 mois = 90 jours
        return f"‚ö†Ô∏è Le CRM de {crm_value} est dat√© du {ri_date.strftime('%d/%m/%Y')} et n'est donc pas √† jour. Un RI plus r√©cent (dat√© de moins de 3 mois) est n√©cessaire."
    else:
        return f"‚úÖ Le CRM de {crm_value} est √† jour (√©mis le {ri_date.strftime('%d/%m/%Y')})."

# Interroger Gemini avec l'historique des interactions
def query_gemini_with_history(docs_text, client_docs_text, user_question, history, model="gemini-exp-1206"):
    """Interroge Gemini avec l'historique des interactions."""
    try:
        # Convertir l'historique en une cha√Æne de caract√®res
        history_str = "\n".join([f"Q: {h['question']}\nR: {h['response']}" for h in history])
        
        # Obtenir la date d'aujourd'hui
        date_aujourdhui = datetime.now().strftime("%d/%m/%Y")
        
        # Construire le prompt avec l'historique et la date d'aujourd'hui
        prompt = f"""
**System message**

### **R√¥le :**  
Tu es **ü§ñAssurbotü§ñ**, une assistance intelligente pour courtiers en assurance, entra√Æn√©e et cr√©e par **DJEGUI WAGUE**. Ton r√¥le est d'aider les courtiers √† d√©terminer si un client est √©ligible aux conditions de souscription des produits d'assurance, en proposant les meilleures garanties, formules et options adapt√©es aux besoins du client.  

---

### **Ton objectif :**  
1. Aider les courtiers √† identifier les produits d'assurance qui **acceptent ou refusent** un client.  
2. **Ne jamais estimer les primes d'assurance**.  
3. Utiliser les **fiches produits** des courtiers grossistes (comme APRIL, Maxance, Z√©phir, etc.) et analyser les **documents clients** (carte grise, permis de conduire, relev√© d'information, etc.).  

---

### **T√¢ches principales :**  

#### **1. R√©pondre aux questions des courtiers :**  
- R√©ponds √† des questions directes, comme l'√¢ge minimum requis par une compagnie ou l'analyse d'un document client sp√©cifique.  
- Adapte-toi √† chaque type de question et r√©ponds de mani√®re **professionnelle et pr√©cise**.  

#### **2. V√©rifier l'√©ligibilit√© des clients :**  
- V√©rifie si un client est √©ligible aux produits d'assurance en fonction de son profil (√¢ge, historique de conduite, type de v√©hicule, etc.).  
- **Pour les caract√©ristiques du v√©hicule :**  
  - Si l'√¢ge du conducteur est **sup√©rieur √† 24 ans**, accepte toutes les caract√©ristiques du v√©hicule sans v√©rification suppl√©mentaire.  
  - Si l'√¢ge est **inf√©rieur √† 24 ans**, v√©rifie les caract√©ristiques impos√©es par les fiches produits.  


   ####**3. LES REGLES GENERALES SUR LES ARTICLE Du CODE DES ASSURANCES En FRANCE**####
        #### **3. Appliquer les r√®gles du Code des assurances (Articles 1 √† 14) :**  
        - **√âvolution du CRM :**  
          - Le CRM est r√©√©valu√© **chaque ann√©e** √† la **date d'√©ch√©ance annuelle** du contrat.  
          - Le nouveau CRM est **calcul√© 2 mois avant la date d'√©ch√©ance**, en tenant compte des sinistres responsables survenus dans les 12 derniers mois.  
          - Pour la plupart des assureurs, la date d'√©ch√©ance correspond √† la **date anniversaire** du contrat. Certains assureurs utilisent une **date d'√©ch√©ance commune** (ex : 1er avril ou 31 d√©cembre).  
        
        - **Calcul du CRM :**  
          - **Sinistre responsable :**  
            - Totalement responsable : +25 % (coefficient √ó 1,25).  
            - Partiellement responsable : +12 % (coefficient √ó 1,12).  
          - **Aucun sinistre responsable :**  
            - R√©duction de 5 % (coefficient √ó 0,95).  
            - Le bonus maximal (0,50) est atteint apr√®s 13 ans sans sinistre responsable.  
          - **Franchise de bonus :**  
            - Si le CRM est de 0,50 depuis au moins 3 ans, le 1er sinistre responsable ne majore pas le coefficient.  
            - Apr√®s un sinistre responsable, il faut 3 ans sans sinistre pour retrouver cet avantage.  
        
        - **Plage du CRM :**  
          - **Bonus maximal :** 0,50.  
          - **Malus maximal :** 3,50.  
        #### **Article. 1 er.-Lors de chaque √©ch√©ance annuelle du contrat, la prime due par l'assur√© est d√©termin√©e en multipliant le montant de la prime de r√©f√©rence, telle qu'elle est d√©finie √† l'article 2, par un coefficient dit coefficient de r√©duction-majoration , fix√© conform√©ment aux articles 4 et 5 suivants.
        Le coefficient d'origine est de 1.
        Article. 2.-La prime de r√©f√©rence est la prime √©tablie par l'assureur pour le risque pr√©sentant les m√™mes caract√©ristiques techniques que celles pr√©sent√©es par l'assur√© et figurant au tarif communiqu√© par l'assureur au ministre charg√© de l'√âconomie et des Finances dans les conditions pr√©vues √† l'article R. 310-6.
        Les caract√©ristiques techniques concernent le v√©hicule, la zone g√©ographique de circulation ou de garage, l'usage socioprofessionnel ou le kilom√©trage parcouru, √©ventuellement la conduite exclusive du v√©hicule, ainsi que les r√©ductions √©ventuelles figurant au tarif des entreprises d'assurance.
        Cette prime de r√©f√©rence ne comprend pas les majorations √©ventuellement pr√©vues pour les circonstances aggravantes √©num√©r√©es √† l'article A. 121-1-2 du Code des assurances. En revanche, pour l'application des dispositions de la clause, cette prime de r√©f√©rence comprend la surprime √©ventuellement pr√©vue pour les conducteurs novices √† l'article A. 121-1-1 du Code des assurances ainsi que les r√©ductions √©ventuelles mentionn√©es √† l'article A. 335-9-3.
        Article. 3.-La prime sur laquelle s'applique le coefficient de r√©duction-majoration est la prime de r√©f√©rence d√©finie √† l'article pr√©c√©dent, pour la garantie des risques de responsabilit√© civile, de dommages au v√©hicule, de vol, d'incendie, de bris de glaces et de catastrophes naturelles.
        Article. 4.-Apr√®s chaque p√©riode annuelle d'assurance sans sinistre, le coefficient applicable est celui utilis√© √† la pr√©c√©dente √©ch√©ance r√©duit de 5 %, arr√™t√© √† la deuxi√®me d√©cimale et arrondi par d√©faut ; toutefois, lorsque le contrat garantit un v√©hicule utilis√© pour un usage Tourn√©es ou Tous D√©placements , la r√©duction est √©gale √† 7 %.
        Le coefficient de r√©duction-majoration ne peut √™tre inf√©rieur √† 0, 50. Aucune majoration n'est appliqu√©e pour le premier sinistre survenu apr√®s une premi√®re p√©riode d'au moins trois ans au cours de laquelle le coefficient de r√©duction-majoration a √©t√© √©gal √† 0, 50.
        
        Article. 5.-Un sinistre survenu au cours de la p√©riode annuelle d'assurance majore le coefficient de 25 % ; un second sinistre majore le coefficient obtenu de 25 %, et il en est de m√™me pour chaque sinistre suppl√©mentaire.
        Le coefficient obtenu est arr√™t√© √† la deuxi√®me d√©cimale et arrondi par d√©faut.
        Si le v√©hicule assur√© est utilis√© pour un usage Tourn√©es ou Tous D√©placements , la majoration est √©gale √† 20 % par sinistre.
        La majoration est, toutefois, r√©duite de moiti√© lorsque la responsabilit√© du conducteur n'est que partiellement engag√©e notamment lors d'un accident mettant en cause un pi√©ton ou un cycliste.
        En aucun cas le coefficient de r√©duction-majoration ne peut √™tre sup√©rieur √† 3, 50.
        Si le conducteur est malus√© , alors Apr√®s deux ann√©es cons√©cutives sans sinistre responsable revient a 1 qu'and a l'article 5 du code des assurances.
        Article. 6.-Ne sont pas √† prendre en consid√©ration pour l'application d'une majoration les sinistres devant donner lieu ou non √† une indemnisation, lorsque :
        1 o l'auteur de l'accident conduit le v√©hicule √† l'insu du propri√©taire ou de l'un des conducteurs d√©sign√©s, sauf s'il vit habituellement au foyer de l'un de ceux-ci ;
        2 o la cause de l'accident est un √©v√©nement, non imputable √† l'assur√©, ayant les caract√©ristiques de la force majeure ;
        3 o la cause de l'accident est enti√®rement imputable √† la victime ou √† un tiers.
        
        Article. 7.-Le sinistre survenu √† un v√©hicule en stationnement par le fait d'un tiers non identifi√© alors que la responsabilit√© de l'assur√© n'est engag√©e √† aucun titre, ou lorsque le sinistre mettant en jeu uniquement l'une des garanties suivantes : vol, incendie, bris de glace, n'entra√Æne pas l'application de la majoration pr√©vue √† l'article 5 et ne fait pas obstacle √† la r√©duction vis√©e √† l'article 4.
        Article. 8.-Lorsqu'il est constat√© qu'un sinistre ne correspond pas √† la qualification qui lui avait √©t√© donn√©e initialement, la rectification de la prime peut √™tre op√©r√©e soit par le moyen d'une quittance compl√©mentaire, soit √† l'occasion de l'√©ch√©ance annuelle suivant cette constatation.
        Aucune rectification de prime ne sera, toutefois, effectu√©e si la constatation est faite au-del√† d'un d√©lai de deux ans suivant l'√©ch√©ance annuelle post√©rieure √† ce sinistre.
        Article. 9.-La p√©riode annuelle prise en compte pour l'application des dispositions de la pr√©sente clause est la p√©riode de douze mois cons√©cutifs pr√©c√©dant de deux mois l'√©ch√©ance annuelle du contrat.
        Si le contrat est interrompu ou suspendu pour quelque cause que ce soit, le taux de r√©duction ou de majoration appliqu√© √† l'√©ch√©ance pr√©c√©dente reste acquis √† l'assur√© mais aucune r√©duction nouvelle n'est appliqu√©e, sauf si l'interruption ou la suspension est au plus √©gale √† trois mois.
        Par exception aux dispositions pr√©c√©dentes, la premi√®re p√©riode d'assurance prise en compte peut √™tre comprise entre neuf et douze mois.
        Article. 10.-Le coefficient de r√©duction-majoration acquis au titre du v√©hicule d√©sign√© au contrat est automatiquement transf√©r√© en cas de remplacement de ce v√©hicule ou en cas d'acquisition d'un ou plusieurs v√©hicules suppl√©mentaires.
        Toutefois, le transfert de la r√©duction n'est applicable que si le ou les conducteurs habituels du ou des v√©hicules d√©sign√©s aux conditions particuli√®res du contrat demeurent les m√™mes, sauf en cas de r√©duction du nombre des conducteurs.
        Article. 11.-Si le contrat concerne un v√©hicule pr√©c√©demment garanti par un autre assureur, le coefficient de r√©duction-majoration applicable √† la premi√®re prime est calcul√© en tenant compte des indications qui figurent sur le relev√© d'informations mentionn√© √† l'article 12 ci-dessous, et des d√©clarations compl√©mentaires de l'assur√©.
        Article. 12.-L'assureur fournit au souscripteur un relev√© d'informations lors de la r√©siliation du contrat par l'une des parties et dans les quinze jours √† compter d'une demande expresse du souscripteur.
        Ce relev√© comporte notamment les indications suivantes :
        -date de souscription du contrat ;
        -num√©ro d'immatriculation du v√©hicule ;
        -nom, pr√©nom, date de naissance, num√©ro et date de d√©livrance du permis de conduire du souscripteur et de chacun des conducteurs d√©sign√©s au contrat ;
        -nombre, nature, date de survenance et conducteur responsable des sinistres survenus au cours des cinq p√©riodes annuelles pr√©c√©dant l'√©tablissement du relev√© d'informations, ainsi que la part de responsabilit√© retenue ;
        -le coefficient de r√©duction-majoration appliqu√© √† la derni√®re √©ch√©ance annuelle ;
        -la date √† laquelle les informations ci-dessus ont √©t√© arr√™t√©es.
        
        Article. 13.-Le conducteur qui d√©sire √™tre assur√© aupr√®s d'un nouvel assureur s'engage √† fournir √† celui-ci le relev√© d'informations d√©livr√© par l'assureur du contrat qui le garantissait pr√©c√©demment, au souscripteur de ce contrat.
        Art. 14.-L'assureur doit indiquer sur l'avis d'√©ch√©ance ou la quittance de prime remis √† l'assur√© :
        -le montant de la prime de r√©f√©rence ;
        -le coefficient de r√©duction-majoration pr√©vu √† l'article A. 121-1 du Code des assurances ;
        -la prime nette apr√®s application de ce coefficient ;
        -la ou les majorations √©ventuellement appliqu√©es conform√©ment √† l'article A335-9-2 du Code des assurances ;
        -la ou les r√©ductions √©ventuellement appliqu√©es conform√©ment √† l'article A. 335-9-3 du Code des assurances.
        
        
        

#### **4. Analyser les documents clients :**  
- **Relev√© d'information (RI) :*
  - Trie les RI du client **du plus ancien au plus r√©cent**.  
  - Commence le calcul du CRM en utilisant le **RI le plus ancien** comme point de d√©part.  
  - Applique les r√®gles de r√©duction/majoration ann√©e par ann√©e, en te basant sur les sinistres responsables et les p√©riodes sans sinistre.  
  - Continue le calcul jusqu'√† la date d'aujourd'hui ({date_aujourdhui}) ou jusqu'√† la date de r√©siliation si le contrat a √©t√© r√©sili√©.  
  - Si le client a **plusieurs RI** (par exemple, provenant de diff√©rentes compagnies d'assurance ou pour plusieurs v√©hicules), traite chaque RI **s√©par√©ment** en fonction du v√©hicule et de la p√©riode d'assurance concern√©e.  
  - Si des informations manquent (par exemple, un RI ancien), demande au courtier de fournir ces informations.  


 ** tu actualise le CRM du client a la date  d'aujourdhui sauf s'il ya resiliation alors tu actualise a la date de resiliation et non a la date d'aujourdhui ({date_aujourdhui}) en faisant des calcules selon les regles de calcule generale du coefficient bonus malus en te basant sur la date de souscription et la date de resiliation  indiqu√© sur le RI, si le RI ne mentionne pas la date de resiliation demande au courtier cette information il te fournira dans le champ de **Question :** {user_question} et reprend le calcule car cette information du courtier dans **Question :** {user_question} est une information valide car souvent les client ont un contacte direct avec leurs client pour collecter certains information supplementaire et toi tu n'a pas acces a cas en tant qu'assistant donc tu devrait valid√© les entr√©es suplementaire des courtiers sans demand√© de justificatif ceci est valable pour tous les autres documents et autres information.**
     #**Si le CRM indiqu√© sur le Relev√© d'Information (RI) EST compris  entre 0.5‚â§CRM‚â§0.95 , cela signifie qu'au moment de la souscription le CRM du client serait compri probablement entre 0.5 et 1 a condition que le client dispose un seule releve d'information client  et ne jamais suppos√© sont CRM initial precedant car tu peut faire le calcule inverse pour le calculer(CRM indiqu√© sur le RI√∑0.95),Dans ce cas, essayez de maximiser le calcul  et donne son CRM approximative precedant de l'ann√©e derniere pour les autre assurreurs  et actualise sont CRM a la date d'aujourdhui ({date_aujourdhui})  tout en mentionnant a la fin de tes analyses au courtier que cette analyse du CRM ne prend pas en copmpte la resiliation du contrat du client  mais s'il ya resiliation mentionn√© sur le RI tu doit actualis√© le CRM a la date de resiliation et non la date d'aujourdhui({date_aujourdhui}).** , et l'orsque tu actualise sont CRM a la date de resiliation en cas de resiliation  tu commente en resumer en disant que le CRM de tel client a la date avant aujourdhui ({date_aujourdhui}) cest a dire hier tout en precisant la date exacte d'hier pour commenter sont CRM actuel, sois plus concise, plus claire et mieux structur√©e tes reponses si possible affiche des tableau.**, sachant que tous les clients dont tu dispose leurs documents sont a la recherche d'une nouvelle assurance chez nous cest pourquoi les calcules du CRM doivent forcement refleter chaque sinistre responsable meme si le contrat a √©t√© resili√© avant la date d'echeance cela permet de facilit√© le travail du courtier car il aura le CRM final pour une nouvelle souscription pour le client.
     #**Si le CRM indiqu√© sur le Relev√© d'Information (RI) EST compris entre 1‚â§ CRM‚â§ 3,5  tu calcule le CRM de l'ann√©e derniere en te basant sur le calcule inverse pour le calculer(CRM indiqu√© sur le RI√∑0.95) a condition que la dur√©e du contrat sur le RI indiqu√© soit a jour et a une dur√© >= 12 mois, Dans ce cas, essayez de maximiser le calcul et donne son CRM approximative precedant  de l'ann√©e derniere pour les autre assurreurs et actualise sont CRM a la date d'aujourdhui ({date_aujourdhui})tout en mentionnant a la fin de tes analyses au courtier que cette analyse du CRM ne prend pas en copmpte la resiliation du contrat du client  mais s'il ya resiliation mentionn√© sur le RI tu doit actualis√© le CRM a la date de resiliation et non la date d'aujourdhui({date_aujourdhui}).** , et l'orsque tu actualise sont CRM a la date de resiliation en cas de resiliation  tu commente en resumer en disant que le CRM de tel client a la date avant aujourdhui ({date_aujourdhui}) cest a dire hier tout en precisant la date exacte d'hier  pour commenter sont CRM actuel, NB : sois plus concise, plus claire et mieux structur√©e tes reponses si possible affiche des tableau..**,sachant que tous les clients dont tu dispose leurs documents sont a la recherche d'une nouvelle assurance chez nous cest pourquoi les calcules du CRM doivent forcement refleter chaque sinistre responsable meme si le contrat a √©t√© resili√© avant la date d'echeance cela permet de facilit√© le travail du courtier car il aura le CRM final pour une nouvelle souscription pour le client.
  - V√©rifie la **date d'√©dition du RI** et compare-la √† la date d'aujourdhui ({date_aujourdhui}).  
    - Tu calcule et donne resultat de la diff√©rences et affiche, si la difference d√©passe **90 jours**, le RI n'est **pas √† jour**.  
    - Si la diff√©rence est inf√©rieure ou √©gale √† **90 jours**, le RI est **√† jour**.  
     **R√®gle des 90 jours :** Utilise la date d'aujourdhui ({date_aujourdhui}) pour v√©rifier si le relev√© d'information (RI) est √† jour. Si la diff√©rence entre la date d'√©dition du RI et la date d'aujourd'hui d√©passe 90 jours, le RI n'est pas √† jour. 

Le CRM est actualis√© une fois par an, g√©n√©ralement √† la date anniversaire du contrat. Ne confonds pas la date d'√©dition du RI avec la date d'actualisation du CRM."
  - V√©rifie l'adresse de l'assur√© sur le RI et la carte grise pour confirmer leur correspondance.  
- **CRM (Coefficient de R√©duction Majoration) :**  
  - Le CRM est **actualis√© une fois par an**, g√©n√©ralement √† la date anniversaire du contrat.  
  - Ne confonds pas la **date d'√©dition du RI** avec la **date d'actualisation du CRM**.  
- **Conducteurs secondaires :**  
  - Si la date de d√©signation du conducteur secondaire n'est pas mentionn√©e, utilise la date du conducteur principal.  
  - Le CRM mentionn√© sur le RI est celui du conducteur principal. Pour le conducteur secondaire, utilise le CRM disponible ou celui du conducteur principal si aucune information n'est fournie.  

#### **5. Proposer des produits adapt√©s :**  
- Identifie les garanties incluses dans chaque formule (tiers, tiers plus, tous risques, etc.) en te basant sur les fiches produits.  
- **Ne demande jamais** au courtier de v√©rifier les fiches produits lui-m√™me.  
- Explique clairement les diff√©rences entre les formules :  
  - **Formule de base** : Responsabilit√© civile, d√©fense p√©nale, assistance (souvent 50 km, option 0 km possible).  
  - **Formule medium/tiers plus** : Garanties de base + vol, incendie, bris de glace, catastrophes naturelles.  
  - **Formule compl√®te/tous risques** : Garanties de base et medium + dommages tous accidents.  

#### **6. Prendre en compte les informations suppl√©mentaires :**  
- Si le courtier fournit des informations suppl√©mentaires dans le champ de saisie (comme une garantie sp√©cifique ou un kilom√©trage souhait√©), accepte et utilise les reponses du courtier  affiner ton analyse, m√™me si tu n'as pas de preuve tangible car tu ne peut pas representer un courtier humain.  
#### *76. Verifie les documents des clients:**
    ** Kbis, RI, tous autre documents**: en appliquant la r√®gle des 90 jours et si les date d'edition des documents depasse 90 jours alors cest pas a jours sinon si inferieurs a 90 jours alors cest a jours en te basant sur ca pour verifier si les documents sont a jours sachant que la date d'aujourd'hui est ({date_aujourdhui})
    ** Kbis**: si cest pour une assurance VTC, alors verifie bien le Kbis si c'est not√© dans le champs d'activit√©: "Transport de voyageur par TAXI  ou vehicule de transport avec chauffeurs afin de valid√© le KBIS pour un chauffeur VTC , cette logique est valble pour tout autre demande d'assurance proffessionnelle tel que livreur de repas , transport de marchandise etc ,donc chaque activit√© doit correspondre a la demande de  du type d'assurance specifique.
    * Kbis**: Meme si la date de creation d'une activit√© est superieurs ou inferieur alors cette dur√©e n'a aucun lien avec l'exeperience de conduite d'un chaffeur VTC? LE CHAUFFEUR doit systematique prouver son annciennet√© de 12 mois d'assurance auto pour VTC car cest pas forcement que tu as une societ√© cr√©ee depuis 24 mois que tu a vraiment une exeperience de 24 mois , cependant certains propietaire de societ√© ou entreprise cr√©e leurs societ√© sans etre assur√© cest un point cl√© a ne pas oublier.


---

### **R√®gles strictes :**  

#### **8. Ne jamais dire :**  
- "Je vous recommande de consulter directement leur ou la fiche produit ou de les contacters."  
- "Je n'ai pas acc√®s en temps r√©el √† toutes les informations de chaque assureur."  
- "Les documents que vous m'avez fournis" ou "les fiches produits".  
  - √Ä la place, utilise : *"Selon ce que j'ai appris lors de mon entra√Ænement"*, *"Selon les dispositions de telle compagnie"*, ou *"Selon les conditions g√©n√©rales"*.  

#### **9. Toujours reformuler les questions :**  
- Si un courtier demande les garanties d'une formule "tiers plus", reformule la question en *"quelles sont les garanties incluses dans la formule medium ?"* et fournis une r√©ponse claire.  

#### **10. Rester professionnel et engageant :**  
- Utilise un ton professionnel mais amical, avec des **emojis** pour rendre l'interaction plus agr√©able.  
- Si l'utilisateur envoie un message simple comme "bonjour", r√©ponds de mani√®re courtoise mais invite-le √† poser une question sp√©cifique.  

---

### **Exemple de r√©ponse :**  
**Question :** Quelles sont les garanties incluses dans la formule tiers plus chez APRIL ?  
**R√©ponse :** Selon les conditions g√©n√©rales d'APRIL, la formule tiers plus (ou medium) inclut :  
- Responsabilit√© civile.  
- D√©fense p√©nale et recours suite √† un accident.  
- Assistance (50 km, option 0 km disponible).  
- Vol, incendie, bris de glace, et catastrophes naturelles.  

---

### **Instructions suppl√©mentaires :**  
- Si l'utilisateur ne fournit pas de contexte, demande-lui de pr√©ciser sa demande.  
- Si tu ne trouves pas les informations n√©cessaires, explique pourquoi et demande des pr√©cisions.  

---

### **Historique des conversations :**  
{history_str}  

### **Documents des compagnies d'assurance :**  
{docs_text}  

### **Documents clients :**  
{client_docs_text}  

**Question :** {user_question}  

"""
        model = GenerativeModel(model_name=model)
        response = model.generate_content(prompt)
        return response.text.strip()
    except Exception as e:
        return f"Erreur lors de l'interrogation de Gemini : {e}"

# Lister les fichiers dans un dossier Google Drive
def list_files_in_folder(folder_id, drive_service):
    """Liste les fichiers dans un dossier Google Drive."""
    try:
        results = drive_service.files().list(
            q=f"'{folder_id}' in parents",
            fields="files(id, name, mimeType)"
        ).execute()
        return results.get("files", [])
    except Exception as e:
        st.error(f"Erreur lors de la r√©cup√©ration des fichiers : {e}")
        return []

# Extraire le texte d'un document Google Docs
def get_google_doc_text(doc_id, docs_service):
    """Extrait le texte d'un document Google Docs."""
    try:
        document = docs_service.documents().get(documentId=doc_id).execute()
        text_content = ""
        for element in document.get("body", {}).get("content", []):
            if "paragraph" in element:
                for text_run in element.get("paragraph", {}).get("elements", []):
                    if "textRun" in text_run:
                        text_content += text_run["textRun"]["content"]
        return text_content.strip()
    except Exception as e:
        return f"Erreur lors de la lecture du document Google Docs : {e}"

# Charger les documents depuis plusieurs dossiers Google Drive
def load_documents(folder_ids, drive_service, docs_service):
    """Charge les documents depuis plusieurs dossiers Google Drive."""
    if not st.session_state.docs_text:
        docs_text = ""
        for folder_id in folder_ids:
            files = list_files_in_folder(folder_id, drive_service)
            if files:
                st.write(f"Compagnies d√©tect√©s üòä‚ú®üïµÔ∏è")
                for file in files:
                    if file["mimeType"] == "application/vnd.google-apps.document":
                        doc_text = get_google_doc_text(file["id"], docs_service)
                        docs_text += f"\n\n---\n\n{doc_text}"
                    else:
                        st.warning(f"Type de fichier non pris en charge : {file['name']}")
            else:
                st.warning(f"Aucun fichier trouv√© dans le dossier {folder_id}.")
        if docs_text:
            st.session_state.docs_text = docs_text
            st.success("Service validation‚úÖ.")

# Fonction pour extraire le texte avec Amazon Textract
def extract_text_with_textract(file_bytes):
    """Extrait le texte d'un fichier avec Amazon Textract."""
    try:
        textract_client = boto3.client(
            "textract",
            aws_access_key_id=os.getenv("AWS_ACCESS_KEY_ID"),
            aws_secret_access_key=os.getenv("AWS_SECRET_ACCESS_KEY"),
            region_name=os.getenv("AWS_REGION", "eu-central-1"),
        )
        response = textract_client.detect_document_text(Document={"Bytes": file_bytes})
        text = ""
        for item in response["Blocks"]:
            if item["BlockType"] == "LINE":
                text += item["Text"] + "\n"
        return text.strip()
    except Exception as e:
        return f"Erreur lors de l'extraction du texte avec Textract : {e}"

# Fonction pour traiter un fichier t√©l√©vers√©
def process_file(uploaded_file):
    """Traite un fichier t√©l√©vers√© et extrait son texte."""
    try:
        # Lire le fichier t√©l√©vers√©
        file_bytes = uploaded_file.read()

        # V√©rifier la taille du fichier (limite √† 5 Mo)
        if len(file_bytes) > 5 * 1024 * 1024:  # 5 Mo
            return "‚ö†Ô∏è Le fichier est trop volumineux. Veuillez t√©l√©verser un fichier de moins de 5 Mo."

        # Afficher un spinner pendant l'extraction
        with st.spinner("Extraction du texte en cours..."):
            extracted_text = extract_text_with_textract(file_bytes)

        # V√©rifier si l'extraction a r√©ussi
        if "Erreur" in extracted_text:
            st.error(extracted_text)  # Afficher l'erreur
            return None

        # Retourner le texte extrait
        return extracted_text
    except Exception as e:
        return f"Erreur lors du traitement du fichier {uploaded_file.name} : {e}"

# Interface utilisateur
def main():
    """Fonction principale pour l'interface utilisateur."""
    st.markdown(
        """
        <style>
        .stButton button {
            background-color: #4CAF50;
            color: white;
            border-radius: 12px;
            padding: 12px 24px;
            font-size: 16px;
            font-weight: bold;
            border: none;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .stButton button:hover {
            background-color: #45a049;
            transform: scale(1.05);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
        }
        .stButton button:active {
            background-color: #367c39;
            transform: scale(0.95);
        }
        .stTextInput input {
            border-radius: 12px;
            padding: 12px;
            border: 1px solid #ccc;
            font-size: 16px;
            transition: all 0.3s ease;
            background-color: #f9f9f9;
        }
        .stTextInput input:focus {
            border-color: #4CAF50;
            box-shadow: 0 0 8px rgba(76, 175, 80, 0.5);
            outline: none;
            background-color: white;
        }
        .centered-title {
            text-align: center;
            font-size: 42px;
            font-weight: bold;
            color: #2E86C1;
            margin-bottom: 20px;
            transition: all 0.3s ease;
        }
        .centered-title:hover {
            color: #1c5a7a;
            transform: scale(1.02);
        }
        .centered-text {
            text-align: center;
            font-size: 18px;
            color: #4CAF50;
            margin-bottom: 30px;
            transition: all 0.3s ease;
        }
        .centered-text:hover {
            color: #367c39;
        }
        .stApp {
            background: linear-gradient(135deg, #f0f2f6, #e6f7ff);
            padding: 20px;
        }
        .stSuccess {
            background-color: #d4edda;
            color: #155724;
            padding: 15px;
            border-radius: 12px;
            border: 1px solid #c3e6cb;
            margin-bottom: 20px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .stSuccess:hover {
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
            transform: translateY(-2px);
        }
        .stError {
            background-color: #f8d7da;
            color: #721c24;
            padding: 15px;
            border-radius: 12px;
            border: 1px solid #f5c6cb;
            margin-bottom: 20px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .stError:hover {
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
            transform: translateY(-2px);
        }
        </style>
        """,
        unsafe_allow_html=True,
    )

    initialize_session_state()
    authorized_emails = load_authorized_emails()

    if not st.session_state.logged_in:
        st.markdown('<h1 class="centered-title">COURTIER-ASSISTANT</h1>', unsafe_allow_html=True)
        st.markdown('<p class="centered-text">Connectez-vous ou inscrivez-vous pour acc√©der au contenu.</p>', unsafe_allow_html=True)

        tab1, tab2 = st.tabs(["Connexion", "Inscription"])
        with tab1:
            st.subheader("Connexion")
            email = st.text_input("Email", key="login_email")
            password = st.text_input("Mot de passe", type="password", key="login_password")
            if st.button("Se connecter"):
                login(email, password)

        with tab2:
            st.subheader("Inscription")
            name = st.text_input("Nom complet (inscription)", key="signup_name")
            new_email = st.text_input("Email (inscription)", key="signup_email")
            new_password = st.text_input("Mot de passe (inscription)", type="password", key="signup_password")
            confirm_password = st.text_input("Confirmez le mot de passe (inscription)", type="password", key="confirm_password")
            if st.button("S'inscrire"):
                signup(name, new_email, new_password, confirm_password, authorized_emails)

    if st.session_state.logged_in:
        st.success(f"Bienvenue, {st.session_state.user_email}!")
        if st.button("Se d√©connecter"):
            logout()

        st.title("üöó Assistant Courtier en Assurance Auto")

        # Initialisation des services Google
        SCOPES = [
            "https://www.googleapis.com/auth/drive.readonly",
            "https://www.googleapis.com/auth/documents.readonly",
        ]
        SERVICE_ACCOUNT_JSON = os.environ.get("GOOGLE_APPLICATION_CREDENTIALS_JSON")
        GEMINI_API_KEY = os.environ.get("GEMINI_API_KEY")

        if not SERVICE_ACCOUNT_JSON:
            st.error("La variable d'environnement 'GOOGLE_APPLICATION_CREDENTIALS_JSON' est manquante ou vide.")
            st.stop()

        try:
            google_credentials = json.loads(SERVICE_ACCOUNT_JSON)
            credentials = service_account.Credentials.from_service_account_info(google_credentials, scopes=SCOPES)
            drive_service = build("drive", "v3", credentials=credentials)
            docs_service = build("docs", "v1", credentials=credentials)
            configure(api_key=GEMINI_API_KEY)  # Initialiser Gemini
            st.success("ü§ñ Assurbot initialis√© üöÄ avec succ√®s !")
        except json.JSONDecodeError:
            st.error("Le contenu de la variable 'GOOGLE_APPLICATION_CREDENTIALS_JSON' n'est pas un JSON valide.")
            st.stop()
        except Exception as e:
            st.error(f"Erreur lors de l'initialisation des services Google : {e}")
            st.stop()

        folder_ids = os.environ.get("GOOGLE_DRIVE_FOLDER_ID", "").split(",")
        folder_ids = [folder_id.strip() for folder_id in folder_ids if folder_id.strip()]
        if not folder_ids:
            st.error("La variable d'environnement 'GOOGLE_DRIVE_FOLDER_ID' n'est pas d√©finie ou est vide.")
            st.stop()

        load_documents(folder_ids, drive_service, docs_service)

        # Section pour t√©l√©verser les documents clients
        st.header("üìÑ T√©l√©versez les documents des clients")
        uploaded_files = st.file_uploader(
            "Glissez-d√©posez les documents des clients (images ou PDF)", type=["jpg", "jpeg", "png", "pdf"], accept_multiple_files=True
        )

        if uploaded_files:
            with ThreadPoolExecutor() as executor:
                # Traiter les fichiers en parall√®le
                extracted_texts = list(executor.map(process_file, uploaded_files))
            
            # Ajouter les textes extraits √† l'√©tat de la session
            for extracted_text in extracted_texts:
                if "client_docs_text" not in st.session_state:
                    st.session_state.client_docs_text = ""
                st.session_state.client_docs_text += f"\n\n---\n\n{extracted_text}"

        # Section pour poser des questions
        st.header("‚ùì Posez une question sur les documents")
        user_question = st.text_input("Entrez votre question ici")
        if st.button("Envoyer la question"):
            with st.spinner("Interrogation ü§ñAssurbot..."):
                response = query_gemini_with_history(
                    st.session_state.docs_text, 
                    st.session_state.client_docs_text, 
                    user_question, 
                    st.session_state.history
                )
            st.session_state.history.insert(0, {"question": user_question, "response": response})

        # Affichage de l'historique des interactions
        if st.session_state.history:
            with st.expander("üìú Historique des interactions", expanded=True):
                for interaction in st.session_state.history:
                    st.markdown(f"**Question :** {interaction['question']}")
                    st.markdown(f"**R√©ponse :** {interaction['response']}")
                    st.markdown("---")

        st.markdown("---")
        st.markdown("¬© 2025 Assistant Assurance Auto. Tous droits r√©serv√©s.")

if __name__ == "__main__":
    if initialize_firebase():
        main()

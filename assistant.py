import json
import os
import re
import logging
import streamlit as st
import firebase_admin
from firebase_admin import credentials, auth
from googleapiclient.discovery import build
from google.oauth2 import service_account
from google.generativeai import GenerativeModel, configure
from google.api_core.exceptions import GoogleAPIError
import boto3  # Pour Amazon Textract
from concurrent.futures import ThreadPoolExecutor
from datetime import datetime  # Ajout pour la gestion des dates

# Configuration de la journalisation
logging.basicConfig(filename="app.log", level=logging.INFO, format="%(asctime)s - %(message)s")

# Initialisation de Firebase
def initialize_firebase():
    """Initialise Firebase avec les donn√©es de configuration."""
    firebase_json_content = os.environ.get("firebasejson")
    if not firebase_json_content:
        st.error("La variable d'environnement 'firebasejson' n'est pas d√©finie.")
        return False

    try:
        firebasejson = json.loads(firebase_json_content)
        if not firebase_admin._apps:
            cred = credentials.Certificate(firebasejson)
            firebase_admin.initialize_app(cred)
            logging.info("Firebase initialis√© avec succ√®s.")
        return True
    except json.JSONDecodeError:
        st.error("Le contenu de 'firebasejson' n'est pas un JSON valide.")
    except Exception as e:
        st.error(f"Erreur lors de l'initialisation de Firebase : {str(e)}")
    return False

# Charger la liste des e-mails autoris√©s
def load_authorized_emails():
    """Charge la liste des e-mails autoris√©s depuis les variables d'environnement."""
    authorized_emails = os.environ.get("AUTHORIZED_EMAILS", "").split(",")
    return [email.strip() for email in authorized_emails if email.strip()]

# Valider la complexit√© du mot de passe
def validate_password(password):
    """Valide la complexit√© du mot de passe."""
    errors = []
    if len(password) < 8:
        errors.append("Le mot de passe doit contenir au moins 8 caract√®res.")
    if not re.search(r"[A-Z]", password):
        errors.append("Le mot de passe doit contenir au moins une majuscule.")
    if not re.search(r"[a-z]", password):
        errors.append("Le mot de passe doit contenir au moins une minuscule.")
    if not re.search(r"[0-9]", password):
        errors.append("Le mot de passe doit contenir au moins un chiffre.")
    return errors

# Valider l'e-mail
def validate_email(email):
    """Valide l'e-mail."""
    pattern = r"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$"
    return re.match(pattern, email) is not None

# Inscription d'un nouvel utilisateur
def signup(name, email, password, confirm_password, authorized_emails):
    """G√®re l'inscription d'un nouvel utilisateur."""
    try:
        if email not in authorized_emails:
            st.error("Votre e-mail n'est pas autoris√© √† s'inscrire.")
            logging.warning(f"Tentative d'inscription non autoris√©e avec l'e-mail : {email}")
            return

        if not validate_email(email):
            st.error("L'e-mail n'est pas valide.")
            return

        if password != confirm_password:
            st.error("Les mots de passe ne correspondent pas.")
            return

        password_errors = validate_password(password)
        if password_errors:
            for error in password_errors:
                st.error(error)
            return

        user = auth.create_user(email=email, password=password, display_name=name)
        st.success(f"Utilisateur {user.email} cr√©√© avec succ√®s!")
        logging.info(f"Utilisateur inscrit avec succ√®s : {email}")
    except auth.EmailAlreadyExistsError:
        st.error("Cet e-mail est d√©j√† utilis√©.")
        logging.warning(f"Tentative d'inscription avec un e-mail d√©j√† utilis√© : {email}")
    except Exception as e:
        st.error(f"Erreur: {e}")
        logging.error(f"Erreur lors de l'inscription : {e}")

# Mettre √† jour le mot de passe
def update_password(email, new_password, confirm_new_password):
    """Met √† jour le mot de passe d'un utilisateur."""
    try:
        if new_password != confirm_new_password:
            st.error("Les nouveaux mots de passe ne correspondent pas.")
            return

        password_errors = validate_password(new_password)
        if password_errors:
            for error in password_errors:
                st.error(error)
            return

        user = auth.get_user_by_email(email)
        auth.update_user(user.uid, password=new_password)
        st.success(f"Mot de passe de l'utilisateur {email} mis √† jour avec succ√®s!")
        logging.info(f"Mot de passe mis √† jour pour l'utilisateur : {email}")
    except auth.UserNotFoundError:
        st.error("Aucun utilisateur trouv√© avec cet e-mail.")
        logging.warning(f"Tentative de mise √† jour du mot de passe pour un utilisateur inexistant : {email}")
    except Exception as e:
        st.error(f"Erreur: {e}")
        logging.error(f"Erreur lors de la mise √† jour du mot de passe : {e}")

# Initialiser l'√©tat de la session
def initialize_session_state():
    """Initialise l'√©tat de la session."""
    if "logged_in" not in st.session_state:
        st.session_state.logged_in = False
        st.session_state.user_email = None
    if "history" not in st.session_state:
        st.session_state.history = []  # Historique des interactions
    if "docs_text" not in st.session_state:
        st.session_state.docs_text = ""
    if "client_docs_text" not in st.session_state:
        st.session_state.client_docs_text = ""

# Connexion de l'utilisateur
def login(email, password):
    """G√®re la connexion de l'utilisateur."""
    try:
        user = auth.get_user_by_email(email)
        if user.email == email:  # Simulez une validation du mot de passe ici si n√©cessaire
            st.session_state.logged_in = True
            st.session_state.user_email = email
            st.success(f"Connect√© en tant que {email}")
            logging.info(f"Utilisateur connect√© : {email}")
        else:
            st.error("Connexion √©chou√©e, e-mail ou mot de passe incorrect.")
    except Exception as e:
        st.error(f"Erreur: {e}")
        logging.error(f"Erreur lors de la connexion : {e}")

# D√©connexion de l'utilisateur
def logout():
    """G√®re la d√©connexion de l'utilisateur."""
    st.session_state.logged_in = False
    st.session_state.user_email = None
    st.success("D√©connexion r√©ussie.")
    logging.info("Utilisateur d√©connect√©.")

# Calculer la mise √† jour du CRM
def calculate_crm_update(ri_date, crm_value):
    """Calcule si le CRM est √† jour en fonction de la date d'√©dition du RI et de la date d'aujourd'hui."""
    today = datetime.now()
    ri_date = datetime.strptime(ri_date, "%d/%m/%Y")
    delta = today - ri_date
    if delta.days > 90:  # 3 mois = 90 jours
        return f"‚ö†Ô∏è Le CRM de {crm_value} est dat√© du {ri_date.strftime('%d/%m/%Y')} et n'est donc pas √† jour. Un RI plus r√©cent (dat√© de moins de 3 mois) est n√©cessaire."
    else:
        return f"‚úÖ Le CRM de {crm_value} est √† jour (√©mis le {ri_date.strftime('%d/%m/%Y')})."

# Interroger Gemini avec l'historique des interactions
def query_gemini_with_history(docs_text, client_docs_text, user_question, history, model="gemini-2.0-flash-exp"):
    """Interroge Gemini avec l'historique des interactions."""
    try:
        # Convertir l'historique en une cha√Æne de caract√®res
        history_str = "\n".join([f"Q: {h['question']}\nR: {h['response']}" for h in history])
        
        # Obtenir la date d'aujourd'hui
        date_aujourdhui = datetime.now().strftime("%d/%m/%Y")
        
        # Construire le prompt avec l'historique et la date d'aujourd'hui
        prompt = f"""
**System message**


---

### **R√¥le :**  
Je suis ü§ñ **Assurbot** ü§ñ, une assistance intelligente pour courtiers en assurance, entra√Æn√©e et cr√©√©e par **DJEGUI WAGUE**. Mon r√¥le est d'aider les courtiers √† d√©terminer si un client est √©ligible aux conditions de souscription des produits d'assurance, en proposant les meilleures garanties, formules et options adapt√©es aux besoins du client.  

**Objectifs :**  
- Aider les courtiers √† identifier les produits d'assurance qui acceptent ou refusent un client.  
- **Ne jamais estimer les primes d'assurance.**  
- Utiliser les fiches produits des courtiers grossistes (comme APRIL, Maxance, Z√©phir, etc.) et analyser les documents clients (carte grise, permis de conduire, relev√© d'information, etc.).  

---

**T√¢ches principales :**  
1. **R√©pondre aux questions des courtiers :**  
   - R√©pondre √† des questions directes, comme l'√¢ge minimum requis par une compagnie ou l'analyse d'un document client sp√©cifique.  
   - Adapter mes r√©ponses √† chaque type de question et r√©pondre de mani√®re professionnelle et pr√©cise.  

2. **V√©rifier l'√©ligibilit√© des clients :**  
   - V√©rifier si un client est √©ligible aux produits d'assurance en fonction de son profil (√¢ge, historique de conduite, type de v√©hicule, etc.).  
   - Pour les caract√©ristiques du v√©hicule :  
     - Si l'√¢ge du conducteur est sup√©rieur √† 24 ans, accepter toutes les caract√©ristiques du v√©hicule sans v√©rification suppl√©mentaire.  
     - Si l'√¢ge est inf√©rieur √† 24 ans, v√©rifier les caract√©ristiques impos√©es par les fiches produits.  

---

**R√®gles g√©n√©rales sur les articles du Code des assurances en France :**  
1. **√âvolution du CRM :**  
   - Le CRM est r√©√©valu√© chaque ann√©e √† la date d'√©ch√©ance annuelle du contrat.  
   - Le nouveau CRM est calcul√© 2 mois avant la date d'√©ch√©ance, en tenant compte des sinistres responsables survenus dans les 12 derniers mois.  
   - Pour la plupart des assureurs, la date d'√©ch√©ance correspond √† la date anniversaire du contrat. Certains assureurs utilisent une date d'√©ch√©ance commune (ex : 1er avril ou 31 d√©cembre).  

2. **Calcul du CRM :**  
   - **Sinistre responsable :**  
     - Totalement responsable : +25 % (coefficient √ó 1,25).  
     - Partiellement responsable : +12 % (coefficient √ó 1,12).  
   - **Aucun sinistre responsable :**  
     - R√©duction de 5 % (coefficient √ó 0,95).  
     - Le bonus maximal (0,50) est atteint apr√®s 13 ans sans sinistre responsable.  
   - **Franchise de bonus :**  
     - Si le CRM est de 0,50 depuis au moins 3 ans, le 1er sinistre responsable ne majore pas le coefficient.  
     - Apr√®s un sinistre responsable, il faut 3 ans sans sinistre pour retrouver cet avantage.  
   - **Plage du CRM :**  
     - Bonus maximal : 0,50.  
     - Malus maximal : 3,50.  

---

**Contexte 1 : Date d'√©ch√©ance et CRM**  
Dans les relev√©s d'informations (RI), la date d'√©ch√©ance peut √™tre d√©sign√©e sous d'autres appellations (ex. : "date d'application"). Si une nouvelle date est mentionn√©e (ex. : "date d'application") et qu'elle peut actualiser le CRM sur le RI, cette date devient la date finale du CRM. Si aucune date n'est mentionn√©e, appliquez les r√®gles g√©n√©rales du CRM.  

**R√®gles :**  
1. Si la date d'√©ch√©ance est mentionn√©e, utilisez-la.  
2. Si une autre appellation est utilis√©e (ex. : "date d'application"), v√©rifiez si elle est dans le futur par rapport √† la date de souscription et si elle peut actualiser le CRM sur le RI. Si oui, cette date devient la date finale du CRM.  
3. Si aucune date n'est trouv√©e ou si la date ne peut pas actualiser le CRM, basez-vous sur les r√®gles g√©n√©rales :  
   - P√©riode de r√©f√©rence : 12 mois cons√©cutifs se terminant 2 mois avant la date de souscription.  

**Exemple :**  
- Date de souscription : 06/01/2021  
- CRM = 0,64  
- Nouvelle appellation (ex. : "date d'application") : 09/01/2023  
- Conclusion : Le CRM √† la date du 09/01/2023 est de 0,64.  

**Communication au Courtier :**  
"Suite √† l'analyse du RI, la date d'application (09/01/2023) est dans le futur par rapport √† la date de souscription (06/01/2021) et peut actualiser le CRM. Par cons√©quent, cette date est consid√©r√©e comme la date finale du CRM. Le CRM √† la date du 09/01/2023 est de 0,64."  

---
### **Informations de d√©part :**
- **Bonus-malus initial (CRM) :** 0,95 (bonus de 5 %).
- **Sinistre responsable :** Survient le 15 novembre 2024.
- **Date de fin de contrat :** 31 d√©cembre 2024.
- **Nouvelle p√©riode CRM :** √Ä partir du 1er janvier 2025.
  
### **Rappel des r√®gles :**
1. **Sinistre responsable :** Augmente le CRM de 25 % (multipli√© par 1,25).
2. **CRM maximal :** 3,50 (malus maximum).
3. **CRM minimal :** 0,50 (bonus maximum).
4. **P√©riode de r√©f√©rence :** Si un sinistre survient moins de 2 mois avant la fin de la p√©riode de 12 mois, il sera pris en compte pour la p√©riode de l'ann√©e suivante.

### **Calcul avant le sinistre :**
Sans sinistre, le CRM aurait d√ª √™tre ajust√© pour l'ann√©e suivante en appliquant une r√©duction de 5 %.  
Le calcul est le suivant :
\[
0,95 \times 0,95 = 0,9025
\]
Arrondi √† 0,90.

### **Calcul avec le sinistre (report√©) :**
Puisque le sinistre a lieu le 15 novembre 2024, soit moins de 2 mois avant la fin de la p√©riode de 12 mois, il sera **report√©** √† l'ann√©e suivante. Ainsi, pour la p√©riode du 1er janvier 2025, le CRM reste **0,90**.

### **Application du sinistre pour 2026 :**
Le sinistre sera pris en compte pour le CRM de l'ann√©e 2026. Le CRM est donc recalcul√© comme suit :
\[
0,90 \times 1,25 = 1,125
\]
Arrondi √† 1,13.

### **R√©sum√© des r√©sultats :**
- **CRM au 1er janvier 2025 :** 0,90 (pas d'impact imm√©diat du sinistre).
- **CRM pour 2026 (avec le sinistre pris en compte) :** 1,13.

Ce calcul montre comment un sinistre survenant moins de 2 mois avant la fin de la p√©riode de r√©f√©rence sera report√© √† l'ann√©e suivante et n'affectera pas imm√©diatement le CRM.
---

### **Contexte : Calcul du CRM en cas de r√©siliation**

Le coefficient de r√©duction-majoration (CRM) est utilis√© pour ajuster le co√ªt de l'assurance automobile en fonction du comportement de l'assur√©. Ce calcul prend en compte la p√©riode de r√©f√©rence, d√©finie comme une p√©riode de 12 mois cons√©cutifs, se terminant 2 mois avant l'√©ch√©ance annuelle du contrat.

### **R√®gles principales :**

1. **Bonus :**  
   Une r√©duction de 5 % est appliqu√©e au coefficient de l'ann√©e pr√©c√©dente pour chaque ann√©e sans accident responsable.

2. **Malus :**  
   En cas d'accident responsable, une majoration de 25 % est appliqu√©e au coefficient pr√©c√©dent, annulant ainsi toute r√©duction.

3. **Coefficient maximal :**  
   Le coefficient maximal est fix√© √† 3,5, ce qui correspond √† un malus de 350 %.

   *(Source : [service-public.fr](https://www.service-public.fr/particuliers/vosdroits/F2655))*

---

### **Cas de figure :**

#### 1. **Aucun sinistre responsable :**
   - **Si la dur√©e d'assurance est inf√©rieure √† 10 mois :** Pas de r√©duction.
   - **Si la dur√©e d'assurance est de 10 mois ou plus :** Une r√©duction de 5 % est appliqu√©e.

#### 2. **Sinistre enti√®rement responsable :**
   - **Majoration de 25 % :** Cette majoration annule toute r√©duction accord√©e.

#### 3. **Sinistre partiellement responsable :**
   - **Majoration de 12,5 % :** Cette majoration annule toute r√©duction accord√©e.

---

### **Exemples concrets :**

#### **Exemple 1 : R√©siliation apr√®s 9 mois sans sinistre**
   - **Date de r√©siliation :** 30 septembre 2023 (9 mois).
   - **Dur√©e d‚Äôassurance :** 9 mois (insuffisante pour b√©n√©ficier de la r√©duction de 5 %).
   - **Nouveau CRM :** 1,00 (pas de r√©duction appliqu√©e).

#### **Exemple 2 : R√©siliation apr√®s 10 mois sans sinistre**
   - **Date de r√©siliation :** 31 octobre 2023 (10 mois).
   - **Dur√©e d‚Äôassurance :** 10 mois (suffisante pour b√©n√©ficier de la r√©duction de 5 %).
   - **Nouveau CRM :** 0,95 (r√©duction de 5 % appliqu√©e).

#### **Exemple 3 : R√©siliation apr√®s 9 mois avec un sinistre enti√®rement responsable**
   - **Date de r√©siliation :** 30 septembre 2023 (9 mois).
   - **Sinistre d√©clar√© :** F√©vrier 2023 (enti√®rement responsable).
   - **Nouveau CRM :** 1,25 (majoration de 25 % appliqu√©e, annulant toute r√©duction).

#### **Exemple 4 : R√©siliation apr√®s 10 mois avec un sinistre partiellement responsable**
   - **Date de r√©siliation :** 31 octobre 2023 (10 mois).
   - **Sinistre d√©clar√© :** F√©vrier 2023 (partiellement responsable).
   - **Nouveau CRM :** 1,125 (majoration de 12,5 % appliqu√©e, annulant toute r√©duction).

#### **Exemple 5 : Incoh√©rence d√©tect√©e (CRM de 0,85 pour 2 ans de permis)**
   - **Date d'obtention du permis :** 1·µâ ≥ janvier 2021 (2 ans de permis).
   - **CRM calcul√© :** 0,85 (incoh√©rent, car un jeune conducteur ne peut pas avoir un CRM inf√©rieur √† 0,90 sans justification).
   - **Communication :**
     > "Suite √† l'analyse, une incoh√©rence a √©t√© d√©tect√©e. Le client a seulement 2 ans de permis, mais le CRM calcul√© est de 0,85. Pour un jeune conducteur, le CRM doit √™tre compris entre 0,90 et 3,5. Cela n'est pas r√©aliste sans une justification sp√©cifique (ex. : transfert de CRM depuis un autre assureur). Veuillez v√©rifier les informations fournies et corriger les donn√©es avant de poursuivre le calcul."

---

### **Remarques :**

1. Lors d'une **interruption d'assurance automobile**, le CRM reste g√©n√©ralement inchang√©, sauf en cas de transfert de CRM d'un autre assureur.

2. Le CRM est calcul√© sur la base des **sinistres survenus** au cours des 12 mois pr√©c√©dant l'√©ch√©ance annuelle du contrat.

   *(Source : [meilleurtaux.com](https://www.meilleurtaux.com/comparateur-assurance/assurance-auto/guide-assurance-auto/bonus-malus/bonus-malus-interruption-assurance.html))*

---

Cette r√©vision compl√®te prend en compte la r√©glementation en vigueur et permet un calcul pr√©cis et conforme du CRM en cas de r√©siliation d'un contrat d'assurance automobile.
---

Voici la version mise en forme de votre texte avec des titres structur√©s et des points d√©taill√©s, en utilisant des `##` et `****` pour une meilleure hi√©rarchisation et lisibilit√© :

---

## **Contexte : R√©cup√©ration du CRM apr√®s Deux Ans Sans Sinistre Responsable**  
Lorsqu'un conducteur n'est pas responsable d'un sinistre pendant deux ann√©es cons√©cutives, son CRM revient automatiquement √† 1 (le coefficient de base). Cela marque un retour √† la situation initiale, et le conducteur b√©n√©ficie ainsi d'une r√©duction de sa prime d'assurance.
        
        ---
        
        ## **Principales R√®gles du CRM :**
        
        ### **1. Bonus**  
        ****R√©duction de 5 % par an :****  
        Chaque ann√©e sans sinistre responsable permet une diminution de 5 % du CRM. Cela encourage les conducteurs √† adopter une conduite prudente et responsable.
        
        ### **2. Malus**  
        ****Augmentation de 25 % par sinistre responsable :****  
        En cas de sinistre o√π l'assur√© est responsable, le CRM augmente de 25 % (soit un malus de 25 % sur le coefficient de l'ann√©e pr√©c√©dente).
        
        ### **3. R√©cup√©ration Rapide**  
        ****Retour √† 1 apr√®s deux ans sans sinistre responsable :****  
        Apr√®s deux ann√©es cons√©cutives sans sinistre responsable, le CRM de l'assur√© revient √† 1, ce qui peut r√©duire consid√©rablement le montant de sa prime d'assurance.
        
        ---
        
        ## **Exemple Concret de Calcul du CRM :**
        
        ### **Situation de d√©part :**
        Un conducteur commence avec un CRM de 1.  
        Apr√®s sa premi√®re ann√©e d'assurance, il subit deux sinistres responsables. Son CRM devient alors 1,56 (augmentation de 25 % par sinistre responsable).
        
        ### **Evolution apr√®s deux ans sans sinistre :**  
        L'assur√© ne subit aucun sinistre responsable pendant les deux ann√©es suivantes. Son CRM revient alors √† 1 apr√®s ces deux ann√©es sans sinistre.
        
        ### **R√©duction continue apr√®s cette p√©riode :**  
        Chaque ann√©e sans sinistre responsable, le CRM sera r√©duit de 5 %, jusqu'√† atteindre un minimum de 0,50 apr√®s 14 ann√©es sans sinistre responsable.
        
        ---
        
        ## **Rappel :**  
        Cette r√®gle permet aux conducteurs maluss√©s de retrouver un tarif d'assurance plus comp√©titif plus rapidement gr√¢ce √† la "descente rapide".

---

## **Remarque Importante :**  

### **Sinistres responsables :**  
****Seuls les sinistres o√π l'assur√© est responsable affectent le CRM.****

### **Sinistres non responsables :**  
****Ils n'ont aucun impact sur le CRM et ne sont pas pris en compte dans le calcul du bonus-malus.****

---

Ainsi, le syst√®me de CRM vise √† r√©compenser les conducteurs responsables et √† p√©naliser ceux qui causent des accidents. La r√©cup√©ration rapide apr√®s deux ann√©es sans sinistre responsable permet aux assur√©s de r√©tablir un bon coefficient et de b√©n√©ficier de primes plus avantageuses.

---
Voici une version bien structur√©e et claire pour int√©grer cette logique dans votre application :  

---

### **Instruction Pour ASSURBOT : V√©rification de la Date d'√âdition du Relev√© d'Information**  

1. **Comparer la Date d'√âdition et la Date Actuelle** :  
   - Prenez la **date d'√©dition** indiqu√©e sur le Relev√© d'information (RI).  
   - Comparez cette date avec la **date d'aujourd'hui** ({date_aujourdhui}).  

2. **Calcul de la Diff√©rence** :  
   - Si la **diff√©rence** entre la date d'aujourd'hui et la date d'√©dition du RI est **sup√©rieure √† 90 jours**, consid√©rez que le RI **n'est pas √† jour**.  
   - Si la diff√©rence est **inf√©rieure ou √©gale √† 90 jours**, consid√©rez que le RI **est √† jour**.  

3. **Message √† Retourner** :  
   - **Cas 1** : RI non √† jour (diff√©rence > 90 jours) :  
     ‚û°Ô∏è "Le Relev√© d'Information est p√©rim√©. Merci de fournir un RI datant de moins de 90 jours."  
   - **Cas 2** : RI √† jour (diff√©rence ‚â§ 90 jours) :  
     ‚û°Ô∏è "Le Relev√© d'Information est valide et √† jour."  

4. **Action √† Prendre** :  
   - Si le RI est p√©rim√©, invitez l'utilisateur √† demander un nouveau relev√© d'information √† l'assureur.  
   - Sinon, passez √† l'√©tape suivante du traitement.  

---







**R√®gle syst√©matique :  CRM calcul√©**  

Si le relev√© d'information est a jour, Quel que soit le sc√©nario (r√©siliation, continuation du contrat, pr√©sence ou absence de sinistre, etc.), associez toujours la date de r√©siliation si disponible au CRM calcul√© continue l'actualisation jusqua la date d'edition ou d'etablissement du relev√© d'information si disponible. La communication doit inclure :  
1. La phrase : **"Suite au calcul effectu√©, le CRM √† la date de r√©siliation si disponible est [valeur], et le CRM du client a la date d'edition du RI est [valeur] si disponible avec les dates exactes."**  
2. Les d√©tails pertinents : dur√©e d'assurance, sinistres, r√©siliation, etc.  
3. Une mention claire de l'utilisation du CRM pour une nouvelle souscription ou une mise √† jour du contrat.  
4.Lorsque le CRM est calcul√© et qu'aucune r√©siliation n'est mentionn√©e sur le Relev√© d'information, il convient de pr√©ciser au courtier que le CRM actualis√© √† la date d'√©dition ne prend pas en compte la r√©siliation du contrat, pour une comprehension claire au courtier.

5. Avant de calculer le CRM, il est imp√©ratif de v√©rifier la coh√©rence entre le CRM calcul√© et la date d'obtention du permis de conduire. Un CRM de 0,85 pour un conducteur ayant seulement 2 ans de permis, par exemple, serait incoh√©rent et n√©cessiterait une v√©rification.
Si le relev√© d'information n'est pas a jour, Quel que soit le sc√©nario (r√©siliation, continuation du contrat, pr√©sence ou absence de sinistre, etc.), associez toujours la date de r√©siliation si disponible au CRM calcul√© continue l'actualisation jusqua la date d'edition du relev√© d'information si disponible. La communication doit inclure :  
6. La phrase :  **"Suite au calcul effectu√© le Relvev√© d'information du client n'est pas a jour, le calcule du CRM pourrait etre erron√©, le CRM √† la date de r√©siliation  est [valeur] a condition que la date de risialion soit mentionn√©, et le CRM du client a la date d'edition du RI est [valeur] a condition que la date de risialion soit mentionn√© avec les dates exactes."**  
1. La phrase : **"Suite au calcul effectu√©, le CRM √† la date de r√©siliation si disponible est [valeur], et le CRM du client a la date d'edition du RI est [valeur]."**  

---

Voici une mise √† jour de vos instructions pour inclure l'attention n√©cessaire concernant la **descente rapide** en cas de **deux ann√©es sans sinistre responsable** :


Voici un prompt complet qui int√®gre toutes vos demandes : √©viter les r√©ponses excessives, v√©rifier si la question est li√©e √† l'assurance ou √† une comparaison, et demander des clarifications si n√©cessaire avant de r√©pondre :

---

##**Regle systematique :**  "Si la question est une simple salutation (comme 'Bonjour, √ßa va ?'), r√©ponds de mani√®re courte et polie sans demander de pr√©cisions. Pour les questions simples sur ton identit√© ou ton cr√©ateur (comme 'Quel est ton nom ?' ou 'Qui t'a cr√©√© ?'), r√©ponds de mani√®re directe et concise. Pour toutes les autres questions, v√©rifie toujours si elles sont li√©es √† l'assurance, √† une comparaison, ou si elles sont ext√©rieures √† ces sujets. Si la question n'est pas claire ou semble hors sujet, demande des pr√©cisions √† l'utilisateur avant de r√©pondre. Une fois que la question est claire, r√©ponds de mani√®re concise et pr√©cise, en te limitant strictement √† ce qui est demand√©. Si je te dis 'tr√®s bien', 'ok', 'merci' ou une autre validation similaire, ne consid√®re pas que la conversation est termin√©e, mais n'ajoute pas d'analyses ou de d√©tails suppl√©mentaires sans que je te le demande explicitement. Ton objectif est de fournir une r√©ponse claire, utile et adapt√©e, tout en restant coh√©rent et en √©vitant de surcharger ou d'ennuyer avec du contenu excessif."
    **Ce prompt garantit qu' Assurbot :
    
    1-V√©rifie la pertinence de la question avant de r√©pondre.
    
    2-Demande des clarifications si la question est floue ou hors sujet.
    
    3-R√©pond de mani√®re concise et pr√©cise.
    
    4-S'arr√™te apr√®s une validation sans ajouter de contenu non sollicit√©.
    
    Cela permet d'avoir des interactions plus contr√¥l√©es et adapt√©es √† vos besoins. üòä
---

Ce prompt garantit que le mod√®le :  
1. V√©rifie la pertinence de la question avant de r√©pondre.  
2. Demande des clarifications si la question est floue ou hors sujet.  
3. R√©pond de mani√®re concise et pr√©cise.  
4. S'arr√™te apr√®s une validation sans ajouter de contenu non sollicit√©.  

Cela permet d'avoir des interactions plus contr√¥l√©es et adapt√©es √† vos besoins. üòä
---

### **Instructions pour Assurbot :**

1. **V√©rification de la coh√©rence CRM / Date d'obtention du permis :**  
   Avant de calculer le CRM, il est imp√©ratif de v√©rifier la coh√©rence entre le CRM calcul√© et la date d'obtention du permis de conduire. Un CRM de 0,85 pour un conducteur ayant seulement 2 ans de permis, par exemple, serait incoh√©rent et n√©cessiterait une v√©rification.

2. **Limite du malus :**  
   En cas de malus, si le CRM s'exprime au-del√† de 3,50, informez que ce montant repr√©sente la **limite maximale du malus**, soit un coefficient de 350 %. Aucun CRM ne peut d√©passer cette limite.

3. **Clarification des doutes :**  
   Si vous avez des doutes sur l'un des √©l√©ments (par exemple, la responsabilit√© d'un sinistre, la dur√©e de l'assurance, ou la date de r√©siliation), il est imp√©ratif de poser la question au courtier pour clarifier le statut avant de proc√©der au calcul. La pr√©cision des donn√©es est essentielle pour un calcul exact.

4. **V√©rification stricte des informations :**  
   Le calcul du CRM doit √™tre effectu√© sur la base d'informations strictement v√©rifi√©es et √† jour pour garantir des r√©sultats fiables et conformes aux r√®gles en vigueur. Assurez-vous que les sinistres sont correctement enregistr√©s et que toutes les donn√©es sont correctement saisies avant de proc√©der au calcul.

5. **Attention √† la descente rapide en cas de non-sinistre responsable pendant deux ans :**  
   Lorsqu'un conducteur a pass√© **deux ann√©es cons√©cutives sans sinistre responsable**, il est important de noter que **le CRM reviendra automatiquement √† 1**. Cette **descente rapide** permet au conducteur de retrouver un tarif d'assurance plus avantageux rapidement, m√™me apr√®s avoir √©t√© maluss√©. Assurez-vous que cette r√®gle est bien appliqu√©e et que le CRM est correctement ajust√© en cons√©quence.
Cette mise √† jour souligne l'importance de l'attention particuli√®re √† la descente rapide du CRM apr√®s deux ann√©es sans sinistre responsable.
**ATTENTION ** :APRES LES CALCULES DU CRM,  TU FAIS UN RESUMER de tes calcules dans un tableau avec des emojis makdown, puce, il faut que ca soit un tableau joli comprehennsible calire et structur√©**
**ATTENTION ASSURBOT** lors de tes reponses : "R√©ponds de mani√®re concise et pr√©cise, en te limitant strictement √† ce qui est demand√©. √âvite de produire des informations suppl√©mentaires, des explications d√©taill√©es ou des exemples inutiles sans que je te le demande explicitement. Si une question n√©cessite plus de d√©tails, attends que je te le pr√©cise avant de d√©velopper. Ton objectif est de fournir une r√©ponse claire et utile, sans surcharger ou ennuyer avec du contenu excessif."

---

### **Historique des conversations :**  
{history_str}  

### **Documents des compagnies d'assurance :**  
{docs_text}  

### **Documents clients :**  
{client_docs_text}  

**Question :** {user_question}  

"""
        model = GenerativeModel(model_name=model)
        response = model.generate_content(prompt)
        return response.text.strip()
    except Exception as e:
        return f"Erreur lors de l'interrogation de Gemini : {e}"

# Lister les fichiers dans un dossier Google Drive
def list_files_in_folder(folder_id, drive_service):
    """Liste les fichiers dans un dossier Google Drive."""
    try:
        results = drive_service.files().list(
            q=f"'{folder_id}' in parents",
            fields="files(id, name, mimeType)"
        ).execute()
        return results.get("files", [])
    except Exception as e:
        st.error(f"Erreur lors de la r√©cup√©ration des fichiers : {e}")
        return []

# Extraire le texte d'un document Google Docs
def get_google_doc_text(doc_id, docs_service):
    """Extrait le texte d'un document Google Docs."""
    try:
        document = docs_service.documents().get(documentId=doc_id).execute()
        text_content = ""
        for element in document.get("body", {}).get("content", []):
            if "paragraph" in element:
                for text_run in element.get("paragraph", {}).get("elements", []):
                    if "textRun" in text_run:
                        text_content += text_run["textRun"]["content"]
        return text_content.strip()
    except Exception as e:
        return f"Erreur lors de la lecture du document Google Docs : {e}"

# Charger les documents depuis plusieurs dossiers Google Drive
def load_documents(folder_ids, drive_service, docs_service):
    """Charge les documents depuis plusieurs dossiers Google Drive."""
    if not st.session_state.docs_text:
        docs_text = ""
        for folder_id in folder_ids:
            files = list_files_in_folder(folder_id, drive_service)
            if files:
                st.write(f"Compagnies d√©tect√©s üòä‚ú®üïµÔ∏è")
                for file in files:
                    if file["mimeType"] == "application/vnd.google-apps.document":
                        doc_text = get_google_doc_text(file["id"], docs_service)
                        docs_text += f"\n\n---\n\n{doc_text}"
                    else:
                        st.warning(f"Type de fichier non pris en charge : {file['name']}")
            else:
                st.warning(f"Aucun fichier trouv√© dans le dossier {folder_id}.")
        if docs_text:
            st.session_state.docs_text = docs_text
            st.success("Service validation‚úÖ.")

# Fonction pour extraire le texte avec Amazon Textract
def extract_text_with_textract(file_bytes):
    """Extrait le texte d'un fichier avec Amazon Textract."""
    try:
        textract_client = boto3.client(
            "textract",
            aws_access_key_id=os.getenv("AWS_ACCESS_KEY_ID"),
            aws_secret_access_key=os.getenv("AWS_SECRET_ACCESS_KEY"),
            region_name=os.getenv("AWS_REGION", "eu-central-1"),
        )
        response = textract_client.detect_document_text(Document={"Bytes": file_bytes})
        text = ""
        for item in response["Blocks"]:
            if item["BlockType"] == "LINE":
                text += item["Text"] + "\n"
        return text.strip()
    except Exception as e:
        return f"Erreur lors de l'extraction du texte avec Textract : {e}"

# Fonction pour traiter un fichier t√©l√©vers√©
def process_file(uploaded_file):
    """Traite un fichier t√©l√©vers√© et extrait son texte."""
    try:
        # Lire le fichier t√©l√©vers√©
        file_bytes = uploaded_file.read()

        # V√©rifier la taille du fichier (limite √† 5 Mo)
        if len(file_bytes) > 5 * 1024 * 1024:  # 5 Mo
            return "‚ö†Ô∏è Le fichier est trop volumineux. Veuillez t√©l√©verser un fichier de moins de 5 Mo."

        # Afficher un spinner pendant l'extraction
        with st.spinner("Extraction du texte en cours..."):
            extracted_text = extract_text_with_textract(file_bytes)

        # V√©rifier si l'extraction a r√©ussi
        if "Erreur" in extracted_text:
            st.error(extracted_text)  # Afficher l'erreur
            return None

        # Retourner le texte extrait
        return extracted_text
    except Exception as e:
        return f"Erreur lors du traitement du fichier {uploaded_file.name} : {e}"
        
def main():
    """Fonction principale pour l'interface utilisateur."""
    st.markdown(
        """
        <style>
        .stApp {
            background: linear-gradient(135deg, #1e3c72, #2a5298);
            color: white;
            padding: 20px;
        }
        .centered-title {
            text-align: center;
            font-size: 42px;
            font-weight: bold;
            color: white;
            margin-bottom: 20px;
            transition: all 0.3s ease;
        }
        .centered-title:hover {
            color: #f0f0f0;
            transform: scale(1.02);
        }
        .centered-text {
            text-align: center;
            font-size: 18px;
            color: #4CAF50;
            margin-bottom: 30px;
            transition: all 0.3s ease;
        }
        .centered-text:hover {
            color: #45a049;
        }
        .stButton button {
            background-color: #4CAF50;
            color: white;
            border-radius: 12px;
            padding: 12px 24px;
            font-size: 16px;
            font-weight: bold;
            border: none;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .stButton button:hover {
            background-color: #45a049;
            transform: scale(1.05);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
        }
        .stTextInput input {
            border-radius: 12px;
            padding: 12px;
            border: 1px solid #ccc;
            font-size: 16px;
            transition: all 0.3s ease;
            background-color: rgba(255, 255, 255, 0.1);
            color: black;
        }
        .stTextInput input:focus {
            border-color: #4CAF50;
            box-shadow: 0 0 8px rgba(76, 175, 80, 0.5);
            outline: none;
            background-color: rgba(255, 255, 255, 0.2);
            color: black;
        }
        .stSuccess {
            background-color: rgba(212, 237, 218, 0.2);
            color: #d4edda;
            padding: 15px;
            border-radius: 12px;
            border: 1px solid #c3e6cb;
            margin-bottom: 20px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .stError {
            background-color: rgba(248, 215, 218, 0.2);
            color: #f8d7da;
            padding: 15px;
            border-radius: 12px;
            border: 1px solid #f5c6cb;
            margin-bottom: 20px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        </style>
        """,
        unsafe_allow_html=True,
    )



    initialize_session_state()
    authorized_emails = load_authorized_emails()

    if not st.session_state.logged_in:
        st.markdown('<h1 class="centered-title">COURTIER-ASSISTANT</h1>', unsafe_allow_html=True)
        st.markdown('<p class="centered-text">Connectez-vous ou inscrivez-vous pour acc√©der au contenu.</p>', unsafe_allow_html=True)

        tab1, tab2 = st.tabs(["Connexion", "Inscription"])
        with tab1:
            st.subheader("Connexion")
            email = st.text_input("Email", key="login_email")
            password = st.text_input("Mot de passe", type="password", key="login_password")
            if st.button("Se connecter"):
                login(email, password)

        with tab2:
            st.subheader("Inscription")
            name = st.text_input("Nom complet (inscription)", key="signup_name")
            new_email = st.text_input("Email (inscription)", key="signup_email")
            new_password = st.text_input("Mot de passe (inscription)", type="password", key="signup_password")
            confirm_password = st.text_input("Confirmez le mot de passe (inscription)", type="password", key="confirm_password")
            if st.button("S'inscrire"):
                signup(name, new_email, new_password, confirm_password, authorized_emails)

    if st.session_state.logged_in:
        st.success(f"Bienvenue, {st.session_state.user_email}!")
        if st.button("Se d√©connecter"):
            logout()

        st.title("üöó Assistant Courtier en Assurance Auto")

        # Initialisation des services Google
        SCOPES = [
            "https://www.googleapis.com/auth/drive.readonly",
            "https://www.googleapis.com/auth/documents.readonly",
        ]
        SERVICE_ACCOUNT_JSON = os.environ.get("GOOGLE_APPLICATION_CREDENTIALS_JSON")
        GEMINI_API_KEY = os.environ.get("GEMINI_API_KEY")

        if not SERVICE_ACCOUNT_JSON:
            st.error("La variable d'environnement 'GOOGLE_APPLICATION_CREDENTIALS_JSON' est manquante ou vide.")
            st.stop()

        try:
            google_credentials = json.loads(SERVICE_ACCOUNT_JSON)
            credentials = service_account.Credentials.from_service_account_info(google_credentials, scopes=SCOPES)
            drive_service = build("drive", "v3", credentials=credentials)
            docs_service = build("docs", "v1", credentials=credentials)
            configure(api_key=GEMINI_API_KEY)  # Initialiser Gemini
            st.success("ü§ñ Assurbot initialis√© üöÄ avec succ√®s !")
        except json.JSONDecodeError:
            st.error("Le contenu de la variable 'GOOGLE_APPLICATION_CREDENTIALS_JSON' n'est pas un JSON valide.")
            st.stop()
        except Exception as e:
            st.error(f"Erreur lors de l'initialisation des services Google : {e}")
            st.stop()

        folder_ids = os.environ.get("GOOGLE_DRIVE_FOLDER_ID", "").split(",")
        folder_ids = [folder_id.strip() for folder_id in folder_ids if folder_id.strip()]
        if not folder_ids:
            st.error("La variable d'environnement 'GOOGLE_DRIVE_FOLDER_ID' n'est pas d√©finie ou est vide.")
            st.stop()

        load_documents(folder_ids, drive_service, docs_service)

        # Section pour t√©l√©verser les documents clients
        st.header("üìÑ T√©l√©versez les documents des clients")
        uploaded_files = st.file_uploader(
            "Glissez-d√©posez les documents des clients (images ou PDF)", type=["jpg", "jpeg", "png", "pdf"], accept_multiple_files=True
        )

        if uploaded_files:
            with ThreadPoolExecutor() as executor:
                # Traiter les fichiers en parall√®le
                extracted_texts = list(executor.map(process_file, uploaded_files))
            
            # Ajouter les textes extraits √† l'√©tat de la session
            for extracted_text in extracted_texts:
                if "client_docs_text" not in st.session_state:
                    st.session_state.client_docs_text = ""
                st.session_state.client_docs_text += f"\n\n---\n\n{extracted_text}"

        # Section pour poser des questions
        st.header("‚ùì Posez une question sur les documents")
        user_question = st.text_input("Entrez votre question ici")
        if st.button("Envoyer la question"):
            with st.spinner("Interrogation ü§ñAssurbot..."):
                response = query_gemini_with_history(
                    st.session_state.docs_text, 
                    st.session_state.client_docs_text, 
                    user_question, 
                    st.session_state.history
                )
            st.session_state.history.insert(0, {"question": user_question, "response": response})

        # Affichage de l'historique des interactions
        if st.session_state.history:
            with st.expander("üìú Historique des interactions", expanded=True):
                for interaction in st.session_state.history:
                    st.markdown(f"**Question :** {interaction['question']}")
                    st.markdown(f"**R√©ponse :** {interaction['response']}")
                    st.markdown("---")

        st.markdown("---")
        st.markdown("¬© 2025 Assistant Assurance Auto. Tous droits r√©serv√©s.")

if __name__ == "__main__":
    if initialize_firebase():
        main()
